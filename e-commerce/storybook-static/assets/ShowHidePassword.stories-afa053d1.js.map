{"version":3,"file":"ShowHidePassword.stories-afa053d1.js","sources":["../../src/components/common/ShowHidePassword/ShowHidePassword.tsx"],"sourcesContent":["import React, { ReactElement, useState } from \"react\";\r\nimport { IonButton, IonIcon } from \"@ionic/react\";\r\nimport { eyeOffOutline, eyeOutline } from \"ionicons/icons\";\r\n\r\nimport \"./ShowHidePassword.scss\";\r\n\r\n/**\r\n * ShowHidePasswordProps is an object with three properties: children, showPassword, isIcon, and inputRef.\r\n * children is an ReactElement<HTMLIonInputElement>, showPassword is a boolean,\r\n * isIcon is a boolean, and inputRef is the ion input reference.\r\n *\r\n * @property {ReactElement<HTMLIonInputElement>} children - The input element that the user is typing into.\r\n * @property {boolean} showPassword - boolean - This is a boolean value that determines whether the\r\n * password is shown or hidden.\r\n * @property {boolean} isIcon - boolean - This is a boolean value that determines whether the icon is\r\n * shown or not.\r\n * @property {React.MutableRefObject<HTMLIonInputElement>} inputRef - reference - This is the ion-input reference\r\n */\r\ntype ShowHidePasswordProps = {\r\n  children: ReactElement<HTMLIonInputElement>;\r\n  showPassword?: boolean;\r\n  isIcon: boolean;\r\n  inputRef: React.MutableRefObject<HTMLIonInputElement>;\r\n};\r\n\r\nconst ShowHidePassword = ({\r\n  children,\r\n  showPassword = false,\r\n  isIcon = true,\r\n  inputRef,\r\n}: ShowHidePasswordProps) => {\r\n  const [showPasswordField, setShowPasswordField] =\r\n    useState<boolean>(showPassword);\r\n  /**\r\n   * `toggleShow` is a function that toggles the value of `showPassword` and changes the type of the\r\n   * input to either `text` or `password` depending on the value of `showPassword`.\r\n   */\r\n  const toggleShow = () => {\r\n    setShowPasswordField((password) => !password);\r\n\r\n    /* change ion-input type based on the toggled show / hide password */\r\n    if (inputRef && inputRef?.current && inputRef?.current?.type) {\r\n      inputRef.current.type = showPasswordField ? \"text\" : \"password\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"show-hide-password-wrapper\">\r\n      {children}\r\n      <IonButton\r\n        fill=\"clear\"\r\n        slot={isIcon ? \"icon-only\" : undefined}\r\n        className=\"type-toggle\"\r\n        onClick={toggleShow}\r\n      >\r\n        {isIcon ? (\r\n          <React.Fragment>\r\n            {!showPasswordField ? (\r\n              <IonIcon className=\"show-option\" icon={eyeOffOutline} />\r\n            ) : (\r\n              <IonIcon className=\"hide-option\" icon={eyeOutline} />\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {!showPasswordField ? (\r\n              <span className=\"show-option\">show</span>\r\n            ) : (\r\n              <span className=\"hide-option\">hide</span>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </IonButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowHidePassword;\r\n"],"names":["ShowHidePassword","children","showPassword","isIcon","inputRef","showPasswordField","setShowPasswordField","useState","jsxs","jsx","IonButton","password","_a","React","IonIcon","eyeOutline","eyeOffOutline"],"mappings":"2UAyBA,MAAAA,EAAA,CAAA,CAA0B,SAAAC,EACxB,aAAAC,EAAA,GACe,OAAAC,EAAA,GACN,SAAAC,CAEX,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAL,CAAA,EAeA,OAAAM,EAAA,MAAA,CAAA,UAAA,6BAAA,SAAA,CAEKP,EAAAQ,EACDC,EAAC,CAAA,KAAA,QACM,KAAAP,EAAA,YAAA,OACwB,UAAA,cACnB,QAfhB,IAAA,OACEG,EAAAK,GAAA,CAAAA,CAAA,EAGAP,IAAAA,GAAA,MAAAA,EAAA,YAAAQ,EAAAR,GAAA,YAAAA,EAAA,UAAA,MAAAQ,EAAA,QACER,EAAA,QAAA,KAAAC,EAAA,OAAA,WACF,EAUa,SAAAF,EAAAM,EAAAI,EAAA,SAAA,CAAA,SAAAR,EAAAI,EAAAK,EAAA,CAAA,UAAA,cAAA,KAAAC,CAAA,CAAA,EAAAN,EAAAK,EAAA,CAAA,UAAA,cAAA,KAAAE,CAAA,CAAA,CAAA,CAAA,EAAAP,EAAAI,EAAA,SAAA,CAAA,SAAAR,EAAAI,EAAA,OAAA,CAAA,UAAA,cAAA,SAAA,MAAA,CAAA,EAAAA,EAAA,OAAA,CAAA,UAAA,cAAA,SAAA,MAAA,CAAA,EAAA,CAiBP,CAAA,CAEJ,CAAA,CAAA,CAGN;;;;"}